[General]
experiment_name = California_Voting_Evaluate
task = evaluate

[Input]
# this could also be an absolute path instead (and must be if you're not running things in local mode)
train_directory = train
test_directory = test
featuresets = [["example_california_features"]]
# there is only set of features to try with one feature file in it here.
featureset_names = ["example_california"]
# when the feature values are numeric and on different scales
# it is good to have feature scaling to put various features in same scale
feature_scaling = both
learners = ["VotingRegressor"]
# since we are using a voting regressor, we need to specify the underlying estimators
fixed_parameters = [{"estimator_names": ["SVR", "LinearRegression", "DecisionTreeRegressor"], "estimator_fixed_parameters": [{}, {}, {"criterion": "poisson"}], "estimator_param_grids": [{"C": [0.001, 0.01]}, {}, {max_features: ["log2", "sqrt"]}]}]
suffix = .jsonlines

[Tuning]
grid_search = true
grid_search_folds = 3
objectives = ['pearson']

[Output]
# again, these can be absolute paths
predictions = output
models = output
results = output
logs = output
save_votes = true
